const int analogInPin = A0; 
int sensorValue = 0; 
unsigned long int avgValue; 
float b;
int buf[10],temp;

double avergearray(int* arr, int number){
	int i;
	int max,min;
	double avg;
	long amount=0;



	for(i=1;i<number;i++){
			amount+=arr[i]; 
			

	}//for
	avg = (double)amount/(number);

	return avg;
}



void setup() {
 Serial.begin(115200);
}
 
// */
#define SensorPin A0            //pH meter Analog output to Arduino Analog Input 0
#define Offset -2.00            //deviation compensate
#define LED LED_BUILTIN
#define samplingInterval 20
#define printInterval 800
#define ArrayLength  40    //times of collection
int pHArray[ArrayLength];   //Store the average value of the sensor feedback
int pHArrayIndex=0;    

// void setup(void)
// {
//   pinMode(LED,OUTPUT);  
//   Serial.begin(9600);  
//   Serial.println("pH meter experiment!");    //Test the serial monitor
// }
void loop(void)
{
	static unsigned long samplingTime = millis();
	static unsigned long printTime = millis();
	static float pHValue,voltage;
	if(millis()-samplingTime > samplingInterval)
	{
		pHArray[pHArrayIndex++]=analogRead(SensorPin);
		if(pHArrayIndex==ArrayLength)pHArrayIndex=0;
		voltage = avergearray(pHArray, ArrayLength)*5.0/1024/2;

		//pHValue = 3.5*voltage+Offset;
		pHValue =  23.1538 - 5.76923 * voltage;
		samplingTime=millis();
	}

	if(millis() - printTime > printInterval)   //Every 800 milliseconds, print a numerical, convert the state of the LED indicator
	{
		Serial.print("Voltage:");  Serial.print(voltage,2); Serial.print("    pH value: ");
		Serial.println(pHValue,2);
		digitalWrite(LED,digitalRead(LED)^1);
		 printTime=millis();
	}
}
